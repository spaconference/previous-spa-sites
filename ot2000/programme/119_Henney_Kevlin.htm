<HTML><HEAD><TITLE>OT 99 Proposal</TITLE><BODY BGCOLOR=ffffff>
<TABLE OT=name width=100%><TR><TD bgcolor="000000"><H1><font color="ffffff">119 </font></H1></TD><TD>119_Henney_Kevlin.htm</TD><TD align=right><h3><A href="output/119">Patterns from this session</A></h3></TR></TABLE>
<H1 align=center><a href="output/119">Distributed Programming Patterns</a></H1>
<H4 align=center>Workshop		170 minutes</H4><H3 align=center>Pattern Mining Successful Practices for Programming			Distributed Systems
<P>
</H3>
<CENTER><H2>Kevlin Henney</H2></CENTER>
<P align=left><BLOCKQUOTE>	Distributed programming, whether through plumbing technologies such as
	CORBA, RMI and COM, or in more framework based contexts, such as web
	servers and middle tier application servers, present developers with a
	number of challenges. The difference in context between smaller
	sequential programs and distributed systems is enough to invalidate a
	number of practices commonly used to construct sequential programs,
	whether through methodological mantra or common coding wisdom.
<P>
	That said, there are patterns that are commonly found and used by
	application and framework programmers alike that are used in common
	across distributed, threaded, persistent, and event driven systems. It
	is these idioms that are the focus of the workshop, whose intent is to
	uncover and document successful practices, linking them together where
	possible. The result is hoped to be a collection of simply documented
	proto-patterns that are of use to the participants as a source of
	questions and practices.
<P>
</BLOCKQUOTE>
<H4>Kevlin Henney (<A HREF=mailto:khenney@qatraining.com>khenney@qatraining.com</A>)</H4>
<TABLE width=100%><tr valign=top><TD width=25%>
<A HREF=http://www.qatraining.com>QA Training</A><BR>
</TD><TD width=75%>	Kevlin Henney is a Principal Technologist with QA Training, where he
	consults, writes and delivers training courses and seminars in C++,
	Java, OOD, patterns, distributed objects, and component architectures.
	He has been working with object	technology and some of its cultural
	offshoots for longer than he cares to remember, and tries to
	share/inflict these experiences with/on others at any opportunity,
	typically through the medium of articles, conference papers, conference
	talks, workshops and courses.
<P>
</TD></TR></TABLE>
<H3>Topics</H3><UL><LI> Consequences of distribution, and the common consequences of threading,
	  event driven frameworks, and persistence.
<LI> Patterns as capturing succesful practices and structures in a context.
<LI> Identifying possible patterns by brainstorming, based on personal
	  experience and preprepared examples.
<LI> Expanding proto patterns to include the nature of and forces in the
	  problem solved, and consideration of what makes the solution distinct
	  and what its consequences are.
<LI> Linking patterns together in a more narrative form.
<P>
</UL>
<H3>Benefits</H3>	Identifying, naming and discussing practices for distributed programming
	is worthwhile in itself, but being able to approach it from a pattern and
	pattern language form offers the possibility of creating a more enduring
	vocabulary for describing distributed programming concepts.
<P>
<P>
<TABLE width=100%><TR BGCOLOR=80ffff><TD width=80%>
<B>Session:</B> Workshop		170 minutes
</TD><TD width=20%>
<B>Level:</B> advanced
</TD></TR><TR BGCOLOR=80ffff><TD>
<B>Audience:</B> 	Developers who have some familiarity with pattern concepts and have
	worked with distributed, threaded, persistent or event driven systems.

</TD><TD>
<B>Max</B> 30
</TD></TR></TABLE>
<H4>Material</H4>
<LI> Slide material used for presentations.
<LI> Additional documents that outline the consequences of distribution
	  that must be considered in any design.
<LI> Some examples of design decisions taken in distributed systems.
<LI> Some proto-patterns as seeds / starting points for discussion.

<H4>Delivery</H4>
	Poster(s) and a proto-pattern language, which will be made available
	to the participants and others through the modern miracle (or curse,
	depending on POV) of the Web.

<H4>Format</H4>
	The session will begin with a conventional presentation, and will then
	move into groups who will begin by brainstorming and putting down names
	or short descriptions of techniques they have come across that have
	been influenced by the constraints of a distributed system, eg latency,
	complex failure modes, etc. This will move onto basic consolidation and
	simple documentation (problem/solution) of the proto patterns. If there
	is time, the patterns will be linked together as a proto pattern language.
	As people are the most effective carriers of information (no, really),
	there will be movement between groups to help physically move ideas around
	the room, cross pollinating patterns where they go.
<P>

<TABLE OT=name><TR><TD bgcolor="000000"><H1><font color="ffffff">119 </font></H1></TD><TD>119_Henney_Kevlin.htm</TD></TR></TABLE>
</BODY></HTML>
